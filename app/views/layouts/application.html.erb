<!DOCTYPE html>
<html>

<head>
  <title>Dashboard</title>
	<%= stylesheet_link_tag    "application" %>
	<%= javascript_include_tag "application" %>
  <%= csrf_meta_tags %>
</head>

<body class="size-medium">

  <div id="mv-topbar">
    <ul style="display:inline;">
      <h1 id="mv-logo"><a href="/widgets"><span class="discreet">the</span>Eye</a></h1>
    </ul>
  </div>
  <hr style="clear:both; border:none;" />
	
	<div id="page">
		<%= yield %>
	</div>

	<script>
	
	$widgets = {
		
		<% for widget in ::Widget.all %>
		'widget-<%= widget.id %>'	: {
			'title' 		: '<%= widget.title %>',
			'url'				: 'http://google.com',
			'template' 	: '<%= widget.template.uid %>',
			'monitored_value' : 0
		},
		<% end %>
	}
	
	function refreshWidgets () {
		
		$.each($widgets, function(name, widget) {
		
			$template = $('#'+widget.template);
			$widget_name = '#'+name;
			$template_variables = {	
															'name'		: name,
															'widget'	: widget
														}
														
			if ($($widget_name).length == 0) {

				$content = $('#empty_template').tmpl($template_variables);
				$('#widgets').append($content);

			}
			
			// display activity indicator while loading
			$($widget_name).spin('large','#888');
			
			widget.monitored_value = parseInt(Math.random() * 100);
			
			$content = $($template).tmpl($template_variables);
			$($widget_name).replaceWith($content);
			
			// hide activity indicator (loaded)
			$($widget_name).spin(false);
			

			$status = test_graph_template_did_appear(name, widget);		

			if ($status == 'alert')
				$($widget_name).addClass('service-status-alert');
			else if ($status == 'warning')
				$($widget_name).addClass('service-status-warning');			
				
			
			
		});
		
	}
	
	function refresh_widget_js_bind() {
		
		$(".widget").unbind();
		
		$('.widget').on('click', function(event,value) {

			$card = $(this).find('.card');
			if ($($card).hasClass('flipped'))
				$($card).removeClass('flipped');
			else
				$($card).addClass('flipped');
				
			return false;
		});
	}
	
	$(document).ready(function() {
				
		resize_page();
		refreshWidgets();
		$("#widgets").sortable();

		setInterval(function(){refreshWidgets()}, 5000);			
	});
	
	function resize_page() {
		
		$width = $(window).width();
		$new_width = Math.floor($width / 200) * 200;
		$('#page').css('width',$new_width);		
		$('#page').css('left', '5px');		
		$('body').css('height',$(window).height());
	}
	
	$(window).resize(function() {
		
		resize_page();
		
	});
	
	</script>
	
	<!-- codemirror 
		http://codemirror.net
	-->
	
	<script>
	
		var editor = CodeMirror.fromTextArea(document.getElementById("template_body"), {
			mode: 'xml', 
			tabMode: "indent"
		});
		editor.setOption("theme", 'ambiance');
	
	</script>
	
	<!-- Templates -->
	
	<% for template in ::Template.all %>
		<%= render :partial => template %>
	<% end %>
	
	<script>
	
	function test_graph_template_did_appear(name, widget) {

		$service_warning			= false;
		$service_alert				= false;
		
		$threshold_warning 		= 80;
		$threshold_alert			= 90;
		if (active_theme() == 'black') {
			$color_ok 					= '#888888';
			$color_warning 			= '#ffffff';
			$color_alert	 			= '#ff4433';
		}
		else {
			$color_ok 					= '#888888';
			$color_warning 			= '#000000';
			$color_alert	 			= '#ff4433';
		}
		$value = widget.monitored_value
		
		if ($value > $threshold_alert) {
				$service_alert = true;
		}
		else if ($value > $threshold_warning ) {
				$service_warning = true;
		}
		
		if (window[name+'_graph_data'] == null) {
			window[name+'_graph_data'] = [];
			for (i = 0; i < 10; i++) {
				$now = new Date();
				window[name+'_graph_data'].push([$now, 
													 					     0])
			}
		}

		if (window[name+'_graph_data'].length > 10) {
			window[name+'_graph_data'].shift();
		}

		$now = new Date();
    window[name+'_graph_data'].push([$now, 
													 					 $value]);
								
		$.plot($('#'+ name + ' .plot-chart'), 
			[{data: window[name+'_graph_data'],
	      color: $color_warning,
				bars: {
				      show: true,
				      lineWidth: 3,
				      fill: true,
				      fillColor: { colors: [ { opacity: 0.8 }, { opacity: 0.1 } ] }
				  },
	      constraints: [
					{
						threshold: $threshold_alert,
					  color: $color_alert,
						evaluate : function(y,threshold){ return y > threshold; }
					},
					{ 
						threshold: $threshold_warning,
						color: $color_ok,
						evaluate : function(y,threshold){ return y < threshold; }
					}
				]},
				{
					legend: {
					    show: false,
							labelFormatter: null
					},
					xaxis: {
		 				tickLength: 0
					},
					yaxis: {
				    tickLength: 0
					},
					grid: {
						borderWitdh: 0,
					}
				}
		 ]);
		
		if ($service_alert) {
			return 'alert'
		}
		else if ($service_warning) {
			return 'warning'			
		}
		else
			return 'ok'
	}
</script>
	
</body>
</html>
